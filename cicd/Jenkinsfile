pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        ARTIFACTORY_CREDENTIALS = credentials('artifactory-creds')
        VAULT_ADDR = 'http://vault:8200'
        VAULT_TOKEN = credentials('vault-token')
    }
    stages {
        stage('Build Backend') {
            steps {
                dir('src/main/java/com/bmi') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        stage('Docker Build & Push') {
            steps {
                sh 'docker build -t $DOCKERHUB_CREDENTIALS_USR/bmi-backend:latest .'
                sh 'docker build -t $DOCKERHUB_CREDENTIALS_USR/bmi-frontend:latest ./frontend'
                sh 'docker push $DOCKERHUB_CREDENTIALS_USR/bmi-backend:latest'
                sh 'docker push $DOCKERHUB_CREDENTIALS_USR/bmi-frontend:latest'
            }
        }
        stage('Trivy Scan') {
            steps {
                sh 'trivy image $DOCKERHUB_CREDENTIALS_USR/bmi-backend:latest'
                sh 'trivy image $DOCKERHUB_CREDENTIALS_USR/bmi-frontend:latest'
            }
        }
        stage('Upload Artifact') {
            steps {
                sh 'curl -u $ARTIFACTORY_CREDENTIALS_USR:$ARTIFACTORY_CREDENTIALS_PSW -T target/myWebSite-0.0.1-SNAPSHOT.jar "https://artifactory.example.com/artifactory/libs-release-local/myWebSite-0.0.1-SNAPSHOT.jar"'
            }
        }
        stage('Deploy to K8s') {
            steps {
                sh 'kubectl apply -f k8s/mysql-secret.yaml'
                sh 'kubectl apply -f k8s/mysql-statefulset.yaml'
                sh 'kubectl apply -f k8s/service-mysql.yaml'
                sh 'kubectl apply -f k8s/backend-deployment.yaml'
                sh 'kubectl apply -f k8s/service-backend.yaml'
                sh 'kubectl apply -f k8s/frontend-deployment.yaml'
                sh 'kubectl apply -f k8s/service-frontend.yaml'
            }
        }
    }
}
